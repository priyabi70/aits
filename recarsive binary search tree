class TreeNode {
    int val;
    TreeNode left, right;
    TreeNode(int x) { val = x; }
}

class Solution {
    TreeNode first, second, prev;
    
    public void recoverTree(TreeNode root) {
        first = second = prev = null;
        
        // In-order traversal to find swapped nodes
        inorder(root);
        
        // Swap the values of the misplaced nodes
        if (first != null && second != null) {
            int temp = first.val;
            first.val = second.val;
            second.val = temp;
        }
    }
    
    private void inorder(TreeNode node) {
        if (node == null) return;

        inorder(node.left);
        
        // Detect swapped nodes
        if (prev != null && node.val < prev.val) {
            if (first == null) first = prev;
            second = node;
        }
        prev = node;

        inorder(node.right);
    }
}
